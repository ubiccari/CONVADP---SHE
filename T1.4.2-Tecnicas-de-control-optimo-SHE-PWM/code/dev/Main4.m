clear all;import casadi.*%% Dynamics Definition aT = 0.5*[0 1]';bT = 0.5*[0 1]';Nspan = 10;Vdc_span = linspace(0.3,3,Nspan);for iVdc = 1:Nspan    Result{iVdc} = Vdc2f(aT,bT,Vdc_span(iVdc));end%%fig = figure(12);ax{1} = subplot(2,3,1,'Parent',fig);ax{2} = subplot(2,3,4,'Parent',fig);ax{3} = subplot(1,3,2,'Parent',fig);ax{4} = subplot(2,3,3,'Parent',fig);ax{5} = subplot(2,3,6,'Parent',fig);plotResults(Result{iVdc}); for iVdc = 1:Nspan    plotResults(Result{iVdc})    pause(0.001) end%%%plotResults(Result)function Result = Vdc2f(aT,bT,Vdc)import casadi.*ma = length(aT);mb = length(bT);as = SX.sym('a',ma,1);bs = SX.sym('b',mb,1);fs = SX.sym('f',1,1);ts = SX.sym('t');Xs = [as;bs];das = (2/pi)*fs*sin([1:2:(2*ma-1)]'.*ts);dbs = (2/pi)*fs*cos([1:2:(2*mb-1)]'.*ts);dynfcn = Function('f',{ts,Xs,fs},{ [das;dbs] });%tspan = linspace(0,pi,250);idyn = ode(dynfcn,Xs,fs,tspan);idyn.InitialCondition = zeros(ma+mb,1);SetIntegrator(idyn,'RK4')Control0 = ZerosControl(idyn);FreeState = solve(idyn,Control0);%% Optimal Control Defepsilon = -2e-3;epsilon = -1e-4;PathCost  = Function('L'  ,{ts,Xs,fs},{ epsilon*(sqrt(fs^2+1e-5))           });FinalCost = Function('Psi',{Xs}      ,{ (aT - as)'*(aT - as) + (bT - bs)'*(bT - bs)  });iocp = ocp(idyn,PathCost,FinalCost);iocp.constraints.MaxControlValue = Vdc;iocp.constraints.MinControlValue = -Vdc;%% Solve OCPControlGuess = ZerosControl(idyn) ;[OptControl ,OptState] = IpoptSolver(iocp,ControlGuess);%%Result.OptControl = OptControl;Result.OptState = OptState;Result.tspan = tspan;Result.mb = mb;Result.ma = ma;Result.Vdc = Vdc;%%%plotResults(OptState,OptControl,tspan,ma,mb)end%%%print('../docs/D0001-CalculusOfVariationIntro/fig/img03.eps','-depsc')